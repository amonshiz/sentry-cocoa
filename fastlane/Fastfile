default_platform(:ios)

platform :ios do
  ios_swift_infoplist_path = "./Samples/iOS-Swift/iOS-Swift/Info.plist"
  ios_swift_clip_infoplist_path = "./Samples/iOS-Swift/iOS-Swift-Clip/Info.plist"

  lane :bump_bundle_version do
    set_info_plist_value(
      path: ios_swift_infoplist_path,
      key: "CFBundleVersion", 
      value: ENV["FASTLANE_BUNDLE_VERSION"]
    )
    set_info_plist_value(
      path: ios_swift_clip_infoplist_path,
      key: "CFBundleVersion", 
      value: ENV["FASTLANE_BUNDLE_VERSION"]
    )
  end

  # The version for all Info.plist must be a period-separated list of at most three non-negative integers
  # for App Store Connect. If we are on a preview we to remove these suffixes.
  lane :remove_preview_version_suffixes do
    version = get_version_number(
      xcodeproj: "Sentry.xcodeproj",
      target: "iOS-Swift"
      )
    version = version.split("-", -1)[0]

    set_info_plist_value(
      path: ios_swift_infoplist_path,
      key: "CFBundleShortVersionString", 
      value: version
    )
    set_info_plist_value(
      path: ios_swift_clip_infoplist_path,
      key: "CFBundleShortVersionString", 
      value: version
    )

    sentryInfoPlistPath = "./Sources/Sentry/Info.plist"
    set_info_plist_value(
      path: sentryInfoPlistPath, 
      key: "CFBundleShortVersionString", 
      value: version
    )
    set_info_plist_value(
      path: sentryInfoPlistPath, 
      key: "CFBundleVersion", 
      value: version
    )
  end

  desc "Build iOS-Swift with Release"
  lane :build_ios_swift do
    if is_ci then
      setup_ci

      sync_code_signing(
        type: "appstore",
        readonly: true,
        app_identifier: ["io.sentry.sample.iOS-Swift",  "io.sentry.sample.iOS-Swift.Clip"],
        output_path: "./signing"
      )

      update_code_signing_settings(
        path: "Sentry.xcodeproj",
        use_automatic_signing: false,
        code_sign_identity: "iPhone Distribution"
      )

      update_project_provisioning(
        xcodeproj: "Sentry.xcodeproj",
        profile: "./signing/AppStore_io.sentry.sample.iOS-Swift.mobileprovision",
        target_filter: "iOS-Swift",
        build_configuration: "Release"
      )

      update_project_provisioning(
        xcodeproj: "Sentry.xcodeproj",
        profile: "./signing/AppStore_io.sentry.sample.iOS-Swift.Clip.mobileprovision",
        target_filter: "iOS-Swift-Clip",
        build_configuration: "Release"
      )
    end

    build_app(
      project: "Sentry.xcodeproj",
      scheme: "iOS-Swift",
      include_bitcode: true,
      include_symbols: false,
      export_method: "app-store",
      archive_path: "iOS-Swift",
      export_xcargs: "-allowProvisioningUpdates"
    )
  end

  lane :build_ios_swift_ui_test do
    if is_ci then
      setup_ci

      sync_code_signing(
        type: "development",
        readonly: true,
        app_identifier: ["io.sentry.sample.iOS-Swift", "io.sentry.sample.iOS-Swift.Clip", "io.sentry.iOS-SwiftUITests.xctrunner"],
        output_path: "./signing"
      )

      update_code_signing_settings(
        path: "Sentry.xcodeproj",
        use_automatic_signing: false,
        code_sign_identity: "Apple Development"
      )

      update_project_provisioning(
        xcodeproj: "Sentry.xcodeproj",
        profile: "./signing/Development_io.sentry.sample.iOS-Swift.mobileprovision",
        target_filter: "iOS-Swift",
        build_configuration: "Debug"
      )

      update_project_provisioning(
        xcodeproj: "Sentry.xcodeproj",
        profile: "./signing/Development_io.sentry.sample.iOS-Swift.Clip.mobileprovision",
        target_filter: "iOS-Swift-Clip",
        build_configuration: "Debug"
      )

      update_project_provisioning(
        xcodeproj: "Sentry.xcodeproj",
        profile: "./signing/Development_io.sentry.iOS-SwiftUITests.xctrunner.mobileprovision",
        target_filter: "iOS-Swift-UITests",
        build_configuration: "Debug"
      )
    end

    build_app(
      project: "Sentry.xcodeproj",
      scheme: "iOS-Swift-UITests",
      xcargs: "build-for-testing",
      derived_data_path: "DerivedData",
      skip_archive: true
    )
  end

  lane :build_ios_benchmark_test do
    if is_ci then
      setup_ci

      sync_code_signing(
        type: "development",
        readonly: true,
        app_identifier: ["io.sentry.sample.iOS-Swift", "io.sentry.sample.iOS-Swift.Clip", "io.sentry.iOS-Benchmarking.xctrunner"],
        output_path: "./signing"
      )

      update_code_signing_settings(
        path: "Sentry.xcodeproj",
        use_automatic_signing: false,
        code_sign_identity: "Apple Development"
      )

      update_project_provisioning(
        xcodeproj: "Sentry.xcodeproj",
        profile: "./signing/Development_io.sentry.sample.iOS-Swift.mobileprovision",
        target_filter: "iOS-Swift",
        build_configuration: "Debug"
      )

      update_project_provisioning(
        xcodeproj: "Sentry.xcodeproj",
        profile: "./signing/Development_io.sentry.sample.iOS-Swift.Clip.mobileprovision",
        target_filter: "iOS-Swift-Clip",
        build_configuration: "Debug"
      )

      update_project_provisioning(
        xcodeproj: "Sentry.xcodeproj",
        profile: "./signing/Development_io.sentry.iOS-Benchmarking.xctrunner.mobileprovision",
        target_filter: "PerformanceBenchmarks",
        build_configuration: "Debug"
      )
    end

    build_app(
      project: "Sentry.xcodeproj",
      scheme: "PerformanceBenchmarks",
      xcargs: "build-for-testing",
      derived_data_path: "DerivedData",
      skip_archive: true
    )
  end

  desc 'Build an XCode UI test target that exercises the Trending Movies test app to generate and upload profile data for testing/development purposes throughout the rest of the Sentry stack.'
  lane :build_profile_data_generator_ui_test do
    if is_ci then
      setup_ci

      sync_code_signing(
        type: "development",
        readonly: true,
        app_identifier: ["io.sentry.sample.TrendingMovies", "io.sentry.sample.movies.ProfileDataGeneratorUITest.xctrunner"],
        output_path: "./signing"
      )

      update_code_signing_settings(
        path: "Sentry.xcodeproj",
        use_automatic_signing: false,
        code_sign_identity: "Apple Development"
      )

      update_project_provisioning(
        xcodeproj: "Sentry.xcodeproj",
        profile: "./signing/Development_io.sentry.sample.TrendingMovies.mobileprovision",
        target_filter: "TrendingMovies",
        build_configuration: "Debug"
      )

      update_project_provisioning(
        xcodeproj: "Sentry.xcodeproj",
        profile: "./signing/Development_io.sentry.sample.movies.ProfileDataGeneratorUITest.xctrunner.mobileprovision",
        target_filter: "ProfileDataGenerator",
        build_configuration: "Debug"
      )
    end

    build_app(
      project: "Sentry.xcodeproj",
      scheme: "ProfileDataGenerator",
      xcargs: "build-for-testing",
      derived_data_path: "DerivedData",
      skip_archive: true,
    )
  end

  desc "Upload iOS-Swift to TestFlight and symbols to Sentry"
  lane :ios_swift_to_testflight do

    app_store_connect_api_key(
      key_id: ENV["APP_STORE_CONNECT_KEY_ID"],
      issuer_id: ENV["APP_STORE_CONNECT_ISSUER_ID"],
      key_content: ENV["APP_STORE_CONNECT_KEY"]
    )
    
    testflight

    download_dsyms(
      wait_for_dsym_processing: true,
      build_number: ENV["FASTLANE_BUNDLE_VERSION"]
    )

    sentry_upload_dif(
      auth_token: ENV["SENTRY_AUTH_TOKEN"],
      org_slug: 'sentry-sdks',
      project_slug: 'sentry-cocoa',
      symbol_maps: 'iOS-Swift.xcarchive/BCSymbolMaps/'
    )
  end

  lane :ui_tests_ios_swiftui do
    run_tests(
      project: "Sentry.xcodeproj",
      scheme: "iOS-SwiftUI"
    )
  end

  lane :ui_tests_ios_objc do
    run_tests(
      project: "Sentry.xcodeproj",
      scheme: "iOS-ObjectiveC"
    )
  end

  lane :ui_tests_ios_swift do |options|
    run_tests(
      project: "Sentry.xcodeproj",
      scheme: "iOS-Swift",
      device: options[:device], 
      address_sanitizer: options[:address_sanitizer]
    )
  end

  lane :ui_tests_tvos_swift do
    run_tests(
      project: "Sentry.xcodeproj",
      scheme: "tvOS-Swift"
    )
  end

end
